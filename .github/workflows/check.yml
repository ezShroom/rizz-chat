name: Quality Check
run-name: Checking commit by ${{ github.actor }}

on: [push]

jobs:
  Debug:
    runs-on: ubuntu-latest

  Lint:
    runs-on: ubuntu-latest

    steps:
      - name: Check out
        uses: actions/checkout@v4

      - name: Cache turbo build setup
        uses: actions/cache@v4
        with:
          path: .turbo
          key: ${{ runner.os }}-turbo-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-turbo-

      - name: Setup Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: 1.2.15

      - name: Install dependencies
        run: bun i

      - name: Lint
        run: bun lint --continue=always

  Style:
    runs-on: ubuntu-latest

    steps:
      - name: Check out
        uses: actions/checkout@v4

      - name: Cache turbo build setup
        uses: actions/cache@v4
        with:
          path: .turbo
          key: ${{ runner.os }}-turbo-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-turbo-

      - name: Setup Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: 1.2.15

      - name: Install dependencies
        run: bun i

      - name: Style
        run: bun style --continue=always

  Check:
    runs-on: ubuntu-latest

    steps:
      - name: Check out
        uses: actions/checkout@v4

      - name: Cache turbo build setup
        uses: actions/cache@v4
        with:
          path: .turbo
          key: ${{ runner.os }}-turbo-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-turbo-

      - name: Setup Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: 1.2.15

      - name: Install dependencies
        run: bun i

      - name: Check
        run: bun check --continue=always
        env:
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
          DATABASE_AUTH_TOKEN: ${{ secrets.DATABASE_AUTH_TOKEN }}
          BETTER_AUTH_SECRET: ${{ secrets.BETTER_AUTH_SECRET }}
          DISCORD_CLIENT_SECRET: ${{ secrets.DISCORD_CLIENT_SECRET }}
          BETTER_AUTH_URL: ${{ vars.BETTER_AUTH_URL }}
          COOKIE_DOMAIN: ${{ vars.COOKIE_DOMAIN }}
          PUBLIC_DISCORD_APP_ID: ${{ vars.PUBLIC_DISCORD_APP_ID }}
          PUBLIC_SESSION_SERVER_ORIGIN: ${{ vars.PUBLIC_SESSION_SERVER_ORIGIN }}
          OTHER_TRUSTED_ORIGINS: ${{ vars.OTHER_TRUSTED_ORIGINS }}

  Build:
    runs-on: ubuntu-latest

    steps:
      - name: Check out
        uses: actions/checkout@v4

      - name: Cache turbo build setup
        uses: actions/cache@v4
        with:
          path: .turbo
          key: ${{ runner.os }}-turbo-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-turbo-

      - name: Setup Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: 1.2.15

      - name: Install dependencies
        run: bun i

      - name: Build
        run: bun run build --continue=always
        env:
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
          DATABASE_AUTH_TOKEN: ${{ secrets.DATABASE_AUTH_TOKEN }}
          BETTER_AUTH_SECRET: ${{ secrets.BETTER_AUTH_SECRET }}
          DISCORD_CLIENT_SECRET: ${{ secrets.DISCORD_CLIENT_SECRET }}
          BETTER_AUTH_URL: ${{ vars.BETTER_AUTH_URL }}
          COOKIE_DOMAIN: ${{ vars.COOKIE_DOMAIN }}
          PUBLIC_DISCORD_APP_ID: ${{ vars.PUBLIC_DISCORD_APP_ID }}
          PUBLIC_SESSION_SERVER_ORIGIN: ${{ vars.PUBLIC_SESSION_SERVER_ORIGIN }}
          OTHER_TRUSTED_ORIGINS: ${{ vars.OTHER_TRUSTED_ORIGINS }}

  Deploy-Preview:
    runs-on: ubuntu-latest
    if: ${{ github.ref != 'refs/heads/main' }}

    steps:
      - uses: actions/checkout@v4

      - name: Cache turbo build setup
        uses: actions/cache@v4
        with:
          path: .turbo
          key: ${{ runner.os }}-turbo-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-turbo-

      - name: Setup Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: 1.2.15

      - name: Install dependencies
        run: bun i

      - name: Build
        run: bun run turbo sveltekit#build
        env:
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
          DATABASE_AUTH_TOKEN: ${{ secrets.DATABASE_AUTH_TOKEN }}
          BETTER_AUTH_SECRET: ${{ secrets.BETTER_AUTH_SECRET }}
          DISCORD_CLIENT_SECRET: ${{ secrets.DISCORD_CLIENT_SECRET }}
          BETTER_AUTH_URL: ${{ vars.BETTER_AUTH_URL }}
          COOKIE_DOMAIN: ${{ vars.COOKIE_DOMAIN }}
          PUBLIC_DISCORD_APP_ID: ${{ vars.PUBLIC_DISCORD_APP_ID }}
          PUBLIC_SESSION_SERVER_ORIGIN: ${{ vars.PUBLIC_SESSION_SERVER_ORIGIN }}
          OTHER_TRUSTED_ORIGINS: ${{ vars.OTHER_TRUSTED_ORIGINS }}

      - name: Deploy
        id: deploy
        uses: cloudflare/wrangler-action@v3
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          command: versions upload --cwd packages/sveltekit --tag pr

      - name: Extract preview URL
        id: extract_url
        env:
          CMD_OUTPUT: ${{ steps.deploy.outputs.command-output }}
        run: |
          echo "Wrangler output:"
          echo "$CMD_OUTPUT"

          # Extract the preview URL
          preview_url=$(echo "$CMD_OUTPUT" | grep -o "Version Preview URL: https://[^[:space:]]*" | sed 's/Version Preview URL: //')

          if [ -n "$preview_url" ]; then
            echo "preview_url=$preview_url" >> $GITHUB_OUTPUT
            echo "✅ Preview URL found: $preview_url"
          else
            echo "❌ No preview URL found in output"
          fi

      - name: Find associated PR
        id: find_pr
        uses: actions/github-script@v7
        with:
          script: |
            const { data: prs } = await github.rest.pulls.list({
              owner: context.repo.owner,
              repo: context.repo.repo,
              state: 'open',
              head: `${context.repo.owner}:${context.ref.replace('refs/heads/', '')}`
            });

            if (prs.length > 0) {
              core.setOutput('pr_number', prs[0].number);
              console.log(`Found PR #${prs[0].number} for branch ${context.ref}`);
              return prs[0].number;
            } else {
              console.log('No open PR found for this branch');
              return null;
            }

      - name: Comment on PR
        if: steps.find_pr.outputs.pr_number && steps.extract_url.outputs.preview_url
        uses: actions/github-script@v7
        with:
          script: |
            const prNumber = '${{ steps.find_pr.outputs.pr_number }}';
            const previewUrl = '${{ steps.extract_url.outputs.preview_url }}';

            const commentBody = `🚀 **Preview Deployment Successful!**

            Your changes have been deployed and are available for preview:

            **Preview URL:** ${previewUrl}

            ---
            *This comment was automatically generated by the deploy workflow.*`;

            // Check if we already have a comment from this workflow
            const { data: comments } = await github.rest.issues.listComments({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: prNumber
            });

            const botComment = comments.find(comment => 
              comment.user.login === 'github-actions[bot]' && 
              comment.body.includes('🚀 **Preview Deployment Successful!**')
            );

            if (botComment) {
              // Update existing comment
              await github.rest.issues.updateComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                comment_id: botComment.id,
                body: commentBody
              });
              console.log('Updated existing deployment comment');
            } else {
              // Create new comment
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: prNumber,
                body: commentBody
              });
              console.log('Created new deployment comment');
            }
